// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Theme from "../../styles/Theme.js";
import * as React from "react";

function button(size) {
  var buttonSize = size === "Medium" ? CssJs.style([
          CssJs.width({
                NAME: "rem",
                VAL: 11
              }),
          CssJs.height({
                NAME: "rem",
                VAL: 3
              }),
          CssJs.fontSize(Theme.Font.Sizes.medium)
        ]) : CssJs.style([
          CssJs.height({
                NAME: "rem",
                VAL: 2
              }),
          CssJs.width({
                NAME: "rem",
                VAL: 5
              }),
          CssJs.fontSize(Theme.Font.Sizes.small)
        ]);
  var buttonHover = CssJs.hover([CssJs.backgroundColor(Theme.Colors.hover)]);
  var defaultStyles = CssJs.style([
        CssJs.backgroundColor(Theme.Colors.primary),
        CssJs.borderStyle("none"),
        CssJs.color(Theme.Colors.white),
        CssJs.borderRadius({
              NAME: "rem",
              VAL: 3
            }),
        CssJs.cursor("pointer"),
        CssJs.outlineStyle("none"),
        CssJs.textAlign("center"),
        buttonHover
      ]);
  return CssJs.merge([
              buttonSize,
              defaultStyles
            ]);
}

var Styles = {
  button: button
};

function Button(Props) {
  var children = Props.children;
  var sizeOpt = Props.size;
  var classNameOpt = Props.className;
  var size = sizeOpt !== undefined ? sizeOpt : "Medium";
  var className = classNameOpt !== undefined ? classNameOpt : "";
  return React.createElement("button", {
              className: button(size) + " " + className
            }, children);
}

var make = Button;

export {
  Styles ,
  make ,
  
}
/* CssJs Not a pure module */
